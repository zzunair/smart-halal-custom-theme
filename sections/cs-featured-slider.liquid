<link rel="stylesheet" href="{{ 'custom-featured-slider.css' | asset_url }}">

<section class="cs-featured-collection mb-5 mt-5">
    <h2 class="section-heading">
        <span>Featured Collection</span>
    </h2>
    <div class="featured-slider-container">
      {% comment %} <button class="prev-arrow slick-arrow">&#8249;</button> {% endcomment %}
      <div class="featured-slider-wrapper">
        <div class="products-slider slick-slider">
            {%- for product in section.settings.collection.products -%}
          <div class="slick-slide">
            <div class="card hover-transition">
              <div class="card-image">
                <img 
                  src="{{ product.featured_image | img_url: 'master' }}" 
                  alt="{{ product.title }}"
                  class="product-image"
                  data-default-image="{{ product.featured_image | img_url: 'master' }}"
                >
              </div>
              
              <div class="card-info">
                <div class="atc-btn">
                  <button class="global-btn" onclick="addToCart({{ product.selected_or_first_available_variant.id }})">Add to Cart</button>
                </div>
                <h5>{{ product.title }}</h5>
                <p>{{ product.price | money }}</p>
                <div class="product-swatches">
                  {% assign has_only_color = true %}
                  {% assign has_color_option = false %}
                  
                  {% comment %} Check if product has color option {% endcomment %}
                  {% for option in product.options_with_values %}
                    {% if option.name == 'Color' or option.name == 'Colour' %}
                      {% assign has_color_option = true %}
                    {% endif %}
                  {% endfor %}
                  
                  {% comment %} Check if product has other options besides color {% endcomment %}
                  {% if product.options.size > 1 %}
                    {% assign has_only_color = false %}
                  {% endif %}
                  
                  {% comment %} Only show swatches if product has color option and no other options {% endcomment %}
                  {% if has_color_option and has_only_color %}
                    {% for option in product.options_with_values %}
                      {% if option.name == 'Color' or option.name == 'Colour' %}
                        {% for value in option.values %}
                          {% assign color_handle = value | handle %}
                          {% assign variant = null %}
                          {% assign variant_image = null %}
                          
                          {% for product_variant in product.variants %}
                            {% if product_variant.options[0] == value %}
                              {% assign variant = product_variant %}
                              {% if variant.image %}
                                {% assign variant_image = variant.image | img_url: 'master' %}
                              {% endif %}
                              {% break %}
                            {% endif %}
                          {% endfor %}
                          
                          {% assign swatch_color = settings.color_swatches[color_handle] | default: value %}
                          <div class="swatch" 
                            data-value="{{ value | escape }}"
                            data-variant-id="{{ variant.id }}"
                            data-variant-image="{% if variant_image %}{{ variant_image }}{% else %}{{ product.featured_image | img_url: 'master' }}{% endif %}"
                            data-variant-url="{{ product.url }}?variant={{ variant.id }}"
                            style="background-color: {{ swatch_color }};"
                            title="{{ value }}"
                            onclick="window.location.href = this.dataset.variantUrl">
                          </div>
                        {% endfor %}
                      {% endif %}
                    {% endfor %}
                  {% endif %}
                </div>
              </div>
            </div>
          </div>
          {%- endfor -%}
        </div>
      </div>
      
    </div>
</section>


<script>
  $(document).ready(function () {
    var featuredSlider = $('.products-slider.slick-slider');

    featuredSlider.slick({
      slidesToShow: 5,
      slidesToScroll: 1,
      infinite: false,
      initialSlide: 0,
      responsive: [
        {
          breakpoint: 768,
          settings: {
            slidesToShow: 1,
            slidesToScroll: 1
          }
        }
      ]
    });

    $('.cs-featured-collection .slick-list').css({
      'transition': 'transform 0.3s ease-out'
    });

    function handleTransform() {
      if (window.innerWidth > 1024) {
        $('.cs-featured-collection .slick-list').css('transform', 'translate3d(17%, 0px, 0px)');
      } else {
        $('.cs-featured-collection .slick-list').css('transform', 'translate3d(0, 0px, 0px)');
      }
    }

    handleTransform();

    $('.cs-featured-collection .slick-next').on('click', function () {
      $('.cs-featured-collection .slick-list').css('transform', 'translate3d(0, 0px, 0px)');
    });

  });

  document.addEventListener('DOMContentLoaded', function () {
    const swatches = document.querySelectorAll('.swatch');
    let resetTimeout;

    swatches.forEach(swatch => {
      swatch.addEventListener('mouseenter', function () {
        // Clear any pending reset timeout
        if (resetTimeout) {
          clearTimeout(resetTimeout);
        }

        const card = this.closest('.card');
        const productImage = card.querySelector('.product-image');
        const variantId = this.dataset.variantId;
        const variantImage = this.dataset.variantImage;

        // Store current image if not already stored
        if (!productImage.dataset.currentImage) {
          productImage.dataset.currentImage = productImage.src;
        }

        // Change to the selected variant image
        if (variantImage && variantImage !== "null") {
          productImage.src = variantImage;
        }
      });

      swatch.addEventListener('mouseleave', function (event) {
        const card = this.closest('.card');
        const productImage = card.querySelector('.product-image');

        // Check if the mouse is over another swatch in the same card
        const relatedTarget = event.relatedTarget;
        if (relatedTarget && relatedTarget.classList.contains('swatch') &&
          relatedTarget.closest('.card') === card) {
          return; // Don't reset if moving to another swatch
        }

        // Set timeout for reset
        resetTimeout = setTimeout(() => {
          productImage.src = productImage.dataset.defaultImage;
        }, 2000); // 2 seconds delay
      });

      swatch.addEventListener('click', function () {
        const card = this.closest('.card');
        const swatches = card.querySelectorAll('.swatch');
        const selectedVariantId = this.dataset.variantId;

        // Update the product image to match the clicked variant
        swatches.forEach(s => s.classList.remove('active'));
        this.classList.add('active');

        const productImage = card.querySelector('.product-image');
        const variantImage = this.dataset.variantImage;

        if (variantImage && variantImage !== "null") {
          productImage.src = variantImage;
        }

        // Update the URL to include the selected variant
        const variantUrl = this.dataset.variantUrl;
        if (variantUrl) {
          window.history.pushState({}, '', variantUrl);
        }
      });
    });
  });

</script>


{% schema %}
  {
    "name": "Cs Featured Slider",
    "settings": [
        {
            "type": "collection",
            "id": "collection",
            "label": "Select Collection"
        },
        {
          "type": "range",
          "id": "numberOfSlides",
          "min": 3,
          "max": 6,
          "step": 1,
          "label": "Show Number of Slides",
          "default": 4
        }
    ],
    "presets": [
      {
        "name": "Cs Featured Slider",
        "settings": {
        }
      }
    ]
  }
{% endschema %}